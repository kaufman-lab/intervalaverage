% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/clip_exposures.r
\name{clip_exposures}
\alias{clip_exposures}
\title{Clip exposures to a non-overlapping address history}
\usage{
clip_exposures(
  x,
  y,
  interval_vars,
  addr_id,
  ppt_id,
  interval_vars_out = c("start", "end")
)
}
\arguments{
\item{x}{A data.table of exposures with two columns designating intervals with a column for address id and a column for ppt it.}

\item{y}{A data.table containing an address history (with two columns designating intervals)
where these intervals are non-overlapping within ppt_id}

\item{interval_vars}{Either a length-2 character vector denoting columns in both x and y or a named
length-2 character vector where the names are columns in x and the values are columns in y.}

\item{addr_id}{Either a length-1 character vector denoting the column name in x and y,
or a length-1 named character vector where the name is the column name in x and the value is the column name in y.}

\item{ppt_id}{Either a length-1 character vector denoting the column name in y}

\item{interval_vars_out}{The column names of the interval columns in the return data.table.
By default the return table will contain columns \code{c("start","end")}.
If your input tables already contain these columns,
you need to alter \code{interval_vars_out} to select non-conflicting names.
These need to be chosen to be non-conflicting with other columns in x and y.}
}
\value{
A data.table with columns \code{interval_vars_out} which denote the start and
stop period for each interval. This return table also contains columns in x and y.
}
\description{
Given an address history where each participant has possibly multiple addresses that are non-overlapping in time,
join this address history to an exposure table that has a complete set of exposures
(ie, the same period for every address) for all addresses such that the resulting table has exposures
only in intervals when that address was lived at. Note that this function does not do any averaging,
it just clips the exposures to the address history.
}
\examples{

x <- data.table(addr_id=c(1,1,2,2,3,3,4,4),
 exposure_start=c(1,6,1,6,1,6,1,6),
 exposure_end=c(5,10,5,10,5,10,5,10)
)
y <- data.table(addr_id=c(1,2,2,3),ppt_id=c(1,1,1,2),addr_start=c(1,8,10,1), addr_end=c(7,9,10,15))
clip_exposures(x,y,interval_vars=c(exposure_start="addr_start",exposure_end="addr_end"),"addr_id","ppt_id")
}
